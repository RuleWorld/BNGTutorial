begin model
begin parameters
  A0     100
  B0     100
  X0     100
  kf_A   10
  km_A   1
  kcat   0.1
  kf_B   10
  km_B1  1
  km_B2  0.1
end parameters

begin molecule types
  X(a,b~Y~pY)
  A1(x)
  A2(x)
  B(x)
end molecule types

begin seed species
  A1(x)     A0
  A2(x)     A0
  B(x)      B0
  X(a,b~Y)  X0
end seed species

begin reaction rules
  R1a: X(a) + A1(x) <-> X(a!1).A1(x!1)               kf_A, km_A
  R1b: X(a) + A2(x) <-> X(a!1).A2(x!1)               kf_A, km_A

  R2a: X(a!1,b~Y).A1(x!1) -> X(a!1,b~pY).A1(x!1)     kcat
  R2b: X(a!1,b~Y).A2(x!1) -> X(a!1,b~pY).A2(x!1)     kcat

  R3a: X(b~Y) + B(x) <-> X(b~Y!1).B(x!1)             kf_B, km_B1
  R3b: X(b~pY) + B(x) <-> X(b~pY!1).B(x!1)           kf_B, km_B2
end reaction rules
end model

# 1. Uncomment one of these to try different types of visualization. Navigate to the appropriate folder
#    in the results directory and open the corresponding .gml file in yEd.
#visualize({type=>"contactmap"})
#visualize({type=>"ruleviz_pattern"})
#visualize({type=>"ruleviz_operation"})

# 2. Uncomment this line and rerun the model. 
#visualize({type=>"opts"})

# 3. Navigate to the appropriate folder in the results directory and move the file with suffix _opts.txt back 
#    to the main project folder. Then uncomment the subsequent lines to produce atom-rule (aka, "regulatory")
#    graphs with increasing levels of compression.
#visualize({suffix=>"1",type=>"regulatory",background=>0,opts=>["../../../visualize_opts.txt"]})
#visualize({suffix=>"2",type=>"regulatory",background=>0,opts=>["../../../visualize_opts.txt"],groups=>1})
#visualize({suffix=>"3",type=>"regulatory",background=>0,ruleNames=>1,doNotUseContextWhenGrouping=>1,opts=>["../../../visualize_opts.txt"],groups=>1,collapse=>1})
